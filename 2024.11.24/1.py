  # ==========  1  ==========  

# Написать генераторную функцию с именем deck, которая создаёт упорядоченную колоду карт.

# Функция не принимает аргументы.

# Функция возвращает объект генератор.
    
    # На каждой итерации или при явном вызове встроенного метода __next__() генератор должен возвращать кортеж из двух элементов:
        # - целое число, обозначающее номинал карты: 2, 3 ... 10, 11 — валет, 12 — дама, 13 — король, 14 — туз
        # - строка, обозначающая масть карты: 'черви', 'бубны', 'пики', 'трефы'

# Колода упорядочивается следующим образом: сначала все номиналы червей, затем все номиналы бубен, затем все номиналы пик и в конце все номиналы треф.

# Написанную функцию необходимо протестировать вручную.
# Пример ручного теста:
    # >>> list(deck())[::13]
    # [(2, 'черви'), (2, 'бубны'), (2, 'пики'), (2, 'трефы')]
    
def deck():
    card_number = list(range(2,11))
    card_number = list(map(str,card_number))
    card_number.extend(["валет",'дама','король','туз'])
    card_suit = ['черви', 'бубны', 'пики', 'трефы']
    for su in card_suit:
        for num in card_number:
            yield num,su
            
            

# <generator object deck at 0x00000120A0CB4C70>
# [('2', 'черви'), ('2', 'бубны'), ('2', 'пики'), ('2', 'трефы')]


# [('2', 'черви'), ('3', 'черви'), ('4', 'черви'), ('5', 'черви'), ('6', 'черви'), ('7', 'черви'), ('8', 'черви'), ('9', 'черви'), ('10', 'черви'), ('валет', 'черви'), ('дама', 'черви'), ('король', 'черви'), ('туз', 'черви'),
 # ('2', 'бубны'), ('3', 'бубны'), ('4', 'бубны'), ('5', 'бубны'), ('6', 'бубны'), ('7', 'бубны'), ('8', 'бубны'), ('9', 'бубны'), ('10', 'бубны'), ('валет', 'бубны'), ('дама', 'бубны'), ('король', 'бубны'), ('туз', 'бубны'),
 # ('2', 'пики'), ('3', 'пики'), ('4', 'пики'), ('5', 'пики'), ('6', 'пики'), ('7', 'пики'), ('8', 'пики'), ('9', 'пики'), ('10', 'пики'), ('валет', 'пики'), ('дама', 'пики'), ('король', 'пики'), ('туз', 'пики'),
 # ('2', 'трефы'), ('3', 'трефы'), ('4', 'трефы'), ('5', 'трефы'), ('6', 'трефы'), ('7', 'трефы'), ('8', 'трефы'), ('9', 'трефы'), ('10', 'трефы'), ('валет', 'трефы'), ('дама', 'трефы'), ('король', 'трефы'), ('туз', 'трефы')]